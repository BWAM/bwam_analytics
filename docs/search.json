[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BWAM Analytics",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "analytical_data_store.html",
    "href": "analytical_data_store.html",
    "title": "1  analytical_data_store",
    "section": "",
    "text": "2 Analytical Data Store\nThe goal of Analytically Data Store is to provide a simple and fast way to access BWAM water quality data.\nData from the BWAM Oracle Data Warehouse, Water Quality Monitoring and Assessment (WQMA), have been extracted, collapsed into a two large tables, and saved as a parquet files. The two tables represent:\n\ntaxonomic_results.parquet: All the taxonomic count data and associated sample information.\nresults.parquet: All results (e.g., chemistry, habitat, survey questions, etc.) and associated sample information.\n\nWe will use the packages arrow to connect to the parquet file and dplyr to help us query data.\nLet’s load the necessary packages and establish the file path to the results parquet file. The parquet file is stored on the L-drive and should be accessible to all DOW staff.\n\nlibrary(arrow)\n\nThe tzdb package is not installed. Timezones will not be available to Arrow compute functions.\n\n\n\nAttaching package: 'arrow'\n\n\nThe following object is masked from 'package:utils':\n\n    timestamp\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# One Big Table Directory -------------------------------------------------\nobt_dir &lt;- file.path(\"L:\",\n                     \"DOW\",\n                     \"BWAM Share\",\n                     \"data\",\n                     \"dev\",\n                     \"parquet\",\n                     \"obt_result.parquet\")\n\n\n2.0.1 ⏩Just Give Me Data\nSome example queries provided to get you started quickly…\n\n# All data\nall_df &lt;- open_dataset(obt_dir) |&gt; \n  collect()\n\n# All lake data\nlake_df &lt;- open_dataset(obt_dir) |&gt; \n  filter(WATERBODY_TYPE %in% \"lake\") |&gt; \n  collect()\n\n# All TP results\ntp_df &lt;- open_dataset(obt_dir) |&gt; \n  filter(PARAMETER_NAME %in% \"phosphorus\",\n         FRACTION %in% \"total\") |&gt;\n  select(SITE_CODE,\n         EVENT_ID,\n         EVENT_DATETIME,\n         FRACTION,\n         PARAMETER_NAME,\n         RESULT_VALUE,\n         UNIT,\n         RESULT_QUALIFIER) |&gt; \n  distinct() |&gt; \n  collect()\n\n# Count of the number of sites with chloride data by waterbody type\ncl_count_df &lt;- open_dataset(obt_dir) |&gt; \n  filter(PARAMETER_NAME %in% \"chloride\") |&gt;\n  distinct(WATERBODY_TYPE, SITE_CODE) |&gt; \n  count(WATERBODY_TYPE) |&gt; \n  collect()\n\n\nobt &lt;- arrow::open_dataset(obt_dir)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>analytical_data_store</span>"
    ]
  }
]